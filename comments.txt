- Single Time Step prediction is enough?

- Can I use additional data?

- Standardization or Normalization? 
    - Standardization: Rescales values, s.t. mean=0 and std=1
        - Assumes Gaussian distribution
    - Normalization: Rescaling values to [0,1], not as robust
        - Acceptable to use max and min of training data?

- Can Reinforcement Learning be used for anything relevant in the job field? (self driving cars)

- Can he show us how he worked his way through this problem?

- Handin as jupyter notebook okay?

Try to explain a nice story.

--------------------------------------------------------------------
- How do I compare the effect of different normalization/standardization options on the model since the mean absolute error is depending on it?

- Sarima really closely models the graph even though it is non-constrained (or whatever the right word for that is)

=> Plan Forward:
    - Get the proper prediction for LSTM working
    - Get the GRU stuff going (low priority)
    - Get a nice comparison between each individual method
    - Shift the data for precipitation because precipitation takes time to have effects on the water levels
    - Use other precipitation levels in other cities and shift it accordingly => Freiburg, Basel
    - Use snow levels in the alps and shift it accordingly
    - Use temperature with a huge shift/lag

20 mins presentation

TODO: Apply different normalization of data for each column!
TODO: Get a nice comparison between each individual method
TODO: Shift the data for precipitation because precipitation takes time to have effects on the water levels
TODO: Use other precipitation levels in other cities and shift it accordingly => Freiburg, Basel
TODO: Use snow levels in the alps and shift it accordingly
TODO: Use temperature with a huge shift/lag
TODO: Make SARIMA prediction for future and make comparable prediction to LSTM
TODO: Plot the different cross correlations for temperature shifting.
TODO: Comparison between sarima and lstm models.

Write down what I've done
